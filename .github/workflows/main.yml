name: Foodgram build-deploy workflow

on:
  push:
    branches: [ master ]

jobs:
  build_and_push_to_docker_hub:
    name: Build Docker image and push to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/foodgram_backend:latest

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - uses: actions/checkout@v3
      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "infra/*, docs/*"
          target: ~/foodgram
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/foodgram/infra
            docker container stop foodgram-backend
            docker container rm foodgram-backend
            docker image rm ${{ secrets.DOCKERHUB_USERNAME }}/foodgram_backend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/foodgram_backend:latest
            docker compose up -d

#  send_message:
#    name: Send message to Telegram
#    runs-on: ubuntu-latest
#    needs: deploy
#    steps:
#      - name: send message
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TG_ID }}
#          token: ${{ secrets.TG_TOKEN }}
#          message: ${{ github.workflow }} успешно выполнен!
